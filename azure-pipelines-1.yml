trigger:
  branches:
    include:
      - master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'

stages:
  - stage: build
    displayName: build application
    jobs:
      - job:
        displayName: build job
        steps:
          - task: UseDotNet@2
            displayName: Use .NET6 to build
            inputs:
              version: "6.0.x"
              includePreviewVersions: true

          - task: DotNetCoreCLI@2
            displayName: Build .NET application
            inputs:
              command: 'build'
              projects: '$(solution)'
              arguments: '--configuration Release'

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(build.ArtifactStagingDirectory)'
              artifact: 'drop'
              publishLocation: 'pipeline'

  - stage: deployapp  
    displayName: Deploy  
    dependsOn: build  # Deploy işlemi builde bağlı
    condition: succeeded('build')  # build aşaması başarılı olursa deploy aşamasını çalıştır
    jobs:
      - job:
        displayName: trying to deploy
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'drop'
              targetPath: '$(Pipeline.Workspace)/drop'
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure for Students(49f57a7e-fb32-4222-8760-e1ec1a6765db)'
              appType: 'webApp'
              WebAppName: 'WebApp1997'
              packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'

  - stage: test
    displayName: run unit test
    jobs:
      - job:
        displayName: unit test job
        steps:
          - task: DotNetCoreCLI@2
            displayName: run tests
            inputs:
              command: test
              projects: '$(solution)'
              publishTestResults: true
              arguments: '--configuration Release'

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(build.ArtifactStagingDirectory)'
              artifact: 'drop'
              publishLocation: 'pipeline'


        

    
    




